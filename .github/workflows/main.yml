name: Deploy to ECR

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Check out code
      uses: actions/checkout@v2

    # Step 2: Log in to Amazon ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    # Step 3: Set environment variables
    - name: Set environment variables
      run: |
        echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
        echo "MYSQL_REPOSITORY=sql-database-repo" >> $GITHUB_ENV
        echo "APP_REPOSITORY=application-repo" >> $GITHUB_ENV
        echo "MYSQL_IMAGE_TAG=latest" >> $GITHUB_ENV
        echo "APP_IMAGE_TAG=web1-latest" >> $GITHUB_ENV
        echo "BUILD_VERSION=v1" >> $GITHUB_ENV  # Fixed versioning

        # If you want an auto-incremented version, use the below line instead
        # echo "BUILD_VERSION=$(date +v%Y%m%d%H%M%S)" >> $GITHUB_ENV  # Dynamic timestamp versioning

    # Step 4: Build and tag the MySQL Docker image
    - name: Build and tag MySQL Docker Image
      run: |
        docker build -t my_db -f Dockerfile_mysql .
        docker tag my_db:latest $ECR_REGISTRY/$MYSQL_REPOSITORY:$MYSQL_IMAGE_TAG  # 'latest'
        docker tag my_db:latest $ECR_REGISTRY/$MYSQL_REPOSITORY:$BUILD_VERSION  # 'v1' or dynamic version

    # Step 5: Build and tag the Application Docker image
    - name: Build and tag App Docker Image
      run: |
        docker build -t my_app -f Dockerfile .
        docker tag my_app:latest $ECR_REGISTRY/$APP_REPOSITORY:$APP_IMAGE_TAG  # 'web1-latest'
        docker tag my_app:latest $ECR_REGISTRY/$APP_REPOSITORY:$BUILD_VERSION  # 'v1' or dynamic version

    # Step 6: Push Docker images to ECR
    - name: Push Docker Images to ECR
      run: |
        docker push $ECR_REGISTRY/$MYSQL_REPOSITORY:$MYSQL_IMAGE_TAG  # Push 'latest'
        docker push $ECR_REGISTRY/$MYSQL_REPOSITORY:$BUILD_VERSION  # Push 'v1' or dynamic version
        docker push $ECR_REGISTRY/$APP_REPOSITORY:$APP_IMAGE_TAG  # Push 'web1-latest'
        docker push $ECR_REGISTRY/$APP_REPOSITORY:$BUILD_VERSION  # Push 'v1' or dynamic version
